@model ListStudentsViewModel

<ul class="list-group d-flex gap-3 text-white w-100">

    @foreach (var student in Model.StudentsPageList.Entities)
    {
        <li class="list-group-item d-flex justify-content-between align-content-center border-1 rounded p-3">

            <div class="d-flex gap-2">
                @Html.RenderPngIcon("graduated")
                <p class="align-self-center">
                    <strong>@student.FirstName @student.LastName</strong>
                </p>
            </div>

            <div class="d-flex justify-content-between col-5">
                <p class="align-self-center">
                    <strong>Grade: @student.GradeAsText</strong>
                </p>

                @if (student.Grade.HasValue)
                {
                    <a asp-area="Teachers"
                       asp-controller="TeacherGrading"
                       asp-action="UpdateGrade"
                       asp-route-examId="@student.ExamId"
                       asp-route-courseId="@Model.RequestData.CourseId"
                       class="btn btn-primary align-self-center" style="height: 40px">
                        Update Grade
                    </a>
                }
                else
                {
                    <a asp-area="Teachers"
                       asp-controller="TeacherGrading"
                       asp-action="AssignGrade"
                       asp-route-studentId="@student.Id"
                       asp-route-courseId="@Model.RequestData.CourseId"
                       class="btn btn-success align-self-center" style="height: 40px">
                        Assing Grade
                    </a>
                }

            </div>

        </li>
    }

</ul>

@if (Model.StudentsPageList.HasPagination)
{
    <div class="row">
        <div class="mt-4 pt-2 col-lg-12">
            @await Html.PartialAsync("_Pagination", Model.StudentsPageList)
        </div>
    </div>
}